{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Listings = _resolveComponent(\"Listings\");\n  return _openBlock(), _createElementBlock(\"main\", null, [_createVNode(_component_Listings, {\n    listingsData: this.listings\n  }, null, 8 /* PROPS */, [\"listingsData\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_Listings","listingsData","listings"],"sources":["/home/dario/Documenti/GitHub/demo-web-app-frontend/src/views/Home.vue"],"sourcesContent":["<template>\n    <main>\n        <Listings v-bind:listingsData=\"this.listings\"/>\n    </main>\n</template>\n\n<script>\n    import Listings from \"@/components/Listings\"\n    import { useUserStore } from \"@/stores/user\"\n    import { useSearchStore } from \"@/stores/search\"\n\n    export default{\n        name: 'Home',\n        components:{\n            Listings,\n        },\n        data(){\n            return{\n                jwt:'',\n                listings: [],\n                searchStore: useSearchStore()\n            }\n        },\n        async created(){\n            this.filterListings(this.searchStore)\n\n            await this.searchStore.$subscribe(async (mutation, state) => {\n                this.filterListings(state)\n            })\n        },\n        methods:{\n            async getListings(){\n                const res = await fetch(\"http://localhost:1337/api/listings?populate=images,category\")\n                \n                const response = await res.json();\n\n                console.log(response)\n\n                return response.data;\n            },\n            async filterListings(state){\n                const ls = await this.getListings();\n\n                console.log(ls[0].attributes.category)\n\n                this.listings = ls.filter( l => l.attributes.title.includes(state.search) && \n                (state.category === '' || l.attributes.category.data.attributes.name === state.category))\n            }\n        },\n        mounted() {\n            try{\n                const userStore = useUserStore();\n\n                this.jwt = userStore.jwt;\n            }\n            catch(err){\n                \n            }\n        },\n    }\n    \n</script>\n\n<style>\n.mainDiv{\n    position: relative;\n}\n</style>"],"mappings":";;;uBACIA,mBAAA,CAEO,eADHC,YAAA,CAA+CC,mBAAA;IAA9BC,YAAY,OAAOC"},"metadata":{},"sourceType":"module","externalDependencies":[]}