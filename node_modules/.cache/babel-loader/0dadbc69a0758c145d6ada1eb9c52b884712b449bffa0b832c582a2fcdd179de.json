{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { useUserStore } from '@/stores/user';\nimport { useCategoriesStore } from '@/stores/categories';\nexport default {\n  name: \"Insert Listing\",\n  data() {\n    return {\n      imageIndex: 0,\n      title: '',\n      description: '',\n      price: 0,\n      phone: '',\n      email: '',\n      imagesUrls: [],\n      category: '',\n      images: [],\n      categoriesStore: Object\n    };\n  },\n  created() {\n    this.categoriesStore = useCategoriesStore();\n  },\n  methods: {\n    nextImage(e) {\n      e.preventDefault();\n      const carouselItems = document.getElementsByClassName(\"carousel-item\");\n      this.imageIndex = (this.imageIndex + 1) % carouselItems.length;\n    },\n    prevImage(e) {\n      e.preventDefault();\n      const carouselItems = document.getElementsByClassName(\"carousel-item\");\n      this.imageIndex = (this.imageIndex - 1) % carouselItems.length;\n      if (this.imageIndex < 0) this.imageIndex = carouselItems.length - 1;\n    },\n    setImages(e) {\n      e.preventDefault();\n      const reader = new FileReader();\n      let images = Array.from(e.target.files);\n      images = images.filter(f => f['type'] === 'image/jpeg' || f['type'] === 'image/png'); //filters file that are not images\n\n      this.images = images;\n      console.log(this.images);\n      this.imagesUrls = [];\n      if (images) {\n        Array.prototype.forEach.call(images, this.readAndPreview);\n      }\n    },\n    async submit(e) {\n      e.preventDefault();\n      const formData = new FormData();\n\n      /*\n      this.images.forEach(img => {\n          formData.append(`files`, img)\n      })\n       const res = await axios.post(\"http://localhost:1337/api/upload\", formData, {\n      headers: { 'Content-Type': 'multipart/form-data' }})\n       res.data.forEach( url => this.imagesUrls.push(url) )\n      */\n      const newListing = {\n        data: {\n          title: this.title,\n          description: this.description,\n          price: this.price,\n          phone: this.phone,\n          images: this.images,\n          email: this.email,\n          category: -1\n        }\n      };\n      const res = await axios.post(\"http://localhost:1337/api/listings\", newListing, {\n        headers: {\n          Authorization: `Bearer ${useUserStore().jwt}`\n        }\n      });\n      console.log(res);\n    },\n    readAndPreview(file) {\n      // Make sure `file.name` matches our extensions criteria\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => {\n        this.imagesUrls.push(reader.result);\n      }, false);\n      reader.readAsDataURL(file);\n    },\n    setCat(e, cat) {\n      e.preventDefault();\n      this.category = cat;\n    }\n  }\n};","map":{"version":3,"names":["axios","useUserStore","useCategoriesStore","name","data","imageIndex","title","description","price","phone","email","imagesUrls","category","images","categoriesStore","Object","created","methods","nextImage","e","preventDefault","carouselItems","document","getElementsByClassName","length","prevImage","setImages","reader","FileReader","Array","from","target","files","filter","f","console","log","prototype","forEach","call","readAndPreview","submit","formData","FormData","newListing","res","post","headers","Authorization","jwt","file","addEventListener","push","result","readAsDataURL","setCat","cat"],"sources":["/home/dario/Documenti/GitHub/demo-web-app-frontend/src/views/InsertListing.vue"],"sourcesContent":["<template>\n    <main>\n        <div class=\"container align-items-start\">\n            <div class=\"card\" style=\"width: 40rem;\">\n                <div class=\"card-body\">\n                    <form style=\"\">\n                        <div class=\"form-group mb-3\">\n                            <label for=\"formTitle\" class=\"form-label\">Titolo</label>\n                            <input v-model=\"title\" class=\"form-control\" type=\"text\" id=\"formTitle\" multiple>\n                        </div>\n\n                        <div v-if=\"this.images !== undefined && this.images.length > 0\" \n                        id=\"carouselExampleControls\" class=\"carousel slide\" data-ride=\"carousel\">\n                            <div v-for=\"(img, index) in this.imagesUrls\" class=\"carousel-inner\">\n                                <div class=\"carousel-item\" :class=\" index === this.imageIndex ? 'active' : ''\">\n                                    <img class=\"d-block card-img-top\" :src=\"img\">\n                                </div>\n                            </div>\n                            <a v-if=\"this.imagesUrls.length > 1\" class=\"carousel-control-prev\" @click=\"prevImage\" role=\"button\" data-slide=\"prev\">\n                                <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                                <span class=\"sr-only\">Previous</span>\n                            </a>\n                            <a v-if=\"this.imagesUrls.length > 1\" class=\"carousel-control-next\" @click=\"nextImage\" role=\"button\" data-slide=\"next\">\n                                <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                                <span class=\"sr-only\">Next</span>\n                            </a>\n                        </div>\n                        <div class=\"form-group mb-3\">\n                            <label for=\"formFileMultiple\" class=\"form-label\">Foto</label>\n                            <input class=\"form-control\" type=\"file\"  accept=\".jpg, .png, .jpeg, .gif, .bmp, .tif, .tiff|image/*\" \n                            id=\"formFileMultiple\" @change=\"setImages\" multiple>\n                        </div>\n\n                        <div class=\"form-group mb-3 dropdown\">\n                            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"catDropdown\" data-bs-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                {{ this.category === '' ? 'Seleziona Categoria' : this.category }}\n                            </button>\n                            <ul class=\"dropdown-menu\" aria-labelledby=\"catDropdown\">\n                                <li v-for=\"c in this.categoriesStore.categories\"><a class=\"dropdown-item\" @click=\"setCat($event, c.attributes.name)\">{{ c.attributes.name }}</a></li>\n                            </ul>\n                        </div>\n\n                        <div class=\"form-group\">\n                            <label class=\"form-label\" for=\"formDescription\">Descrizione</label> \n                            <textarea  class=\"form-control\" type=\"text\" id=\"formDescription\" rows=\"8\" v-model=\"description\" multiple></textarea>\n                        </div>\n                        <div class=\"form-group mb-3\">\n                            <label for=\"formPhone\" class=\"form-label\">Numero di Telefono</label>\n                            <input v-model=\"phone\" class=\"form-control\" type=\"text\" id=\"formPhone\" multiple>\n                        </div>\n                        <div class=\"form-group mb-3\">\n                            <label for=\"formEmail\" class=\"form-label\">Email</label>\n                            <input v-model=\"email\" class=\"form-control\" type=\"text\" id=\"formPhone\" multiple>\n                        </div>\n                        <div class=\"form-group\" style=\"padding-top: 1rem;\">\n                            <button type=\"submit\" class=\"btn btn-primary\"  @click=\"submit\">Inserisci</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </main>\n</template>\n\n<script>\n    import axios from 'axios';\n    import { useUserStore } from '@/stores/user';\n    import { useCategoriesStore } from '@/stores/categories';\n\n    export default{\n        name: \"Insert Listing\",\n        data(){\n            return{\n                imageIndex:0,\n            \n                title:'',\n                description:'',\n                price:0,\n                phone:'',\n                email:'',\n                imagesUrls:[],\n                category:'',\n                images:[],\n                categoriesStore: Object,\n            }\n        },\n        created(){\n            this.categoriesStore = useCategoriesStore();\n        },\n        methods: {\n            nextImage(e){\n                e.preventDefault();\n\n                const carouselItems = document.getElementsByClassName(\"carousel-item\");\n\n                this.imageIndex = (this.imageIndex + 1) % carouselItems.length;\n            },\n            prevImage(e){\n                e.preventDefault();\n\n                const carouselItems = document.getElementsByClassName(\"carousel-item\");\n\n                this.imageIndex = (this.imageIndex - 1) % carouselItems.length;\n                if(this.imageIndex  < 0)\n                    this.imageIndex = carouselItems.length - 1;\n            },\n            setImages(e){\n                e.preventDefault();\n\n                const reader = new FileReader();\n\n                let images = Array.from(e.target.files);\n\n                images = images.filter( f => f['type'] === 'image/jpeg' || f['type'] === 'image/png' )  //filters file that are not images\n\n                this.images = images\n\n                console.log(this.images)\n\n                this.imagesUrls = []\n                \n                if (images) {\n                    Array.prototype.forEach.call(images, this.readAndPreview);\n                }\n                \n            },\n            async submit(e){\n                e.preventDefault();\n\n                const formData = new FormData();\n\n                /*\n                this.images.forEach(img => {\n                    formData.append(`files`, img)\n                })\n\n                const res = await axios.post(\"http://localhost:1337/api/upload\", formData, {\n                headers: { 'Content-Type': 'multipart/form-data' }})\n\n                res.data.forEach( url => this.imagesUrls.push(url) )\n*/\n                const newListing = {\n                    data:{\n                        title: this.title,\n                        description: this.description,\n                        price: this.price,\n                        phone: this.phone,\n                        images: this.images,\n                        email: this.email,\n                        category:-1\n                    }\n                    \n                }\n\n\n                const res = await axios.post(\"http://localhost:1337/api/listings\", newListing, {headers: {\n                Authorization: `Bearer ${useUserStore().jwt}`}\n                })\n\n                console.log(res)\n            },\n            readAndPreview(file) {\n                // Make sure `file.name` matches our extensions criteria\n                const reader = new FileReader();\n\n                reader.addEventListener(\n                    \"load\",\n                    () => {\n                        this.imagesUrls.push(reader.result)\n                    },\n                    false,\n                );\n\n                reader.readAsDataURL(file);\n            },\n            setCat(e, cat){\n                e.preventDefault();\n\n                this.category = cat;\n            }\n        }\n    }\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}